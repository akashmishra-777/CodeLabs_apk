import React, { useState, useRef } from "react";
import {
  View,
  Text,
  StyleSheet,
  TextInput,
  ScrollView,
} from "react-native";
import { SafeAreaView } from "react-native-safe-area-context";
import { StatusBar } from "expo-status-bar";
import {
  responsiveScreenFontSize,
  responsiveScreenHeight,
  responsiveScreenWidth,
} from "react-native-responsive-dimensions";
import { IconButton, Avatar } from "react-native-paper";
import { TouchableOpacity } from "react-native";
import MaterialCommunityIcons from "@expo/vector-icons/MaterialCommunityIcons";
import axios from "axios";

export default function ai_bot() {
  const [messages, setMessages] = useState([]);
  const [msgValue, setMsgValue] = useState("");
  const scrollBottom = useRef(null);
  const [inpFocus, setInpFocus] = useState(true);

  function scroll() {
    scrollBottom.current.scrollToEnd({ animated: true });
  }

  async function sendHandler() {
    if (msgValue) {
      setMessages([...messages, { msg: msgValue, show: "right" }]);

      scroll();

      setMsgValue("");

      const data = await axios.post(
        "https://codelabs-server-sp7w.onrender.com/ai/smartBot",
        {
          msg: msgValue,
        }
      );

      
      

      if (data) {
        setMessages((previous) => [
          ...previous,
          { msg: data.data.msg, show: "left" },
        ]);
        scroll();
      }
    }
  }

  return (
    <>
      <StatusBar style="dark" />
      <SafeAreaView style={styles.mainContainer}>

            <View style={styles.premium}>
          <View
           
          >
            <TouchableOpacity  style={{
              flexDirection: "row",
              gap: responsiveScreenWidth(1),
              justifyContent: "center",
              alignItems: "center",
              backgroundColor: "#EEE",
              paddingHorizontal: responsiveScreenHeight(1.5),
              paddingVertical: responsiveScreenHeight(.8),
              borderRadius: 10,
              elevation: 2,
              marginBottom:10
            }}
            >


            <MaterialCommunityIcons
              name="star-four-points-outline"
              size={18}
              color="black"
            />
            <Text style={styles.premiumText}>Get Premium</Text>
            </TouchableOpacity>
          </View>
        </View>



        <ScrollView
          ref={scrollBottom}
          style={{
            marginBottom: responsiveScreenHeight(7),
          }}
        >
          {inpFocus ? (
            <View
              style={{
                height: responsiveScreenHeight(80),
                justifyContent: "center",
                alignItems: "center",
              }}
            >
              <Avatar.Image
                size={120}
                style={{backgroundColor:"transparent"}}
                source={{
                  uri: "https://cdn.jsdelivr.net/gh/akashmishra-777/PUBLIC_IMAGES/icon.gif",
                }}
              />
            </View>
          ) : (
            <View
              style={{
                flexDirection: "row",
                justifyContent: "center",
                alignItems: "center",
                margin: responsiveScreenHeight(1),
                backgroundColor: "#DEE8F7",
                alignSelf: "center",
                padding: responsiveScreenHeight(1),
                elevation: 4,
                borderRadius: 7,
              }}
            >
              <Text
                style={{
                  fontSize: responsiveScreenFontSize(1.5),
                  width: responsiveScreenWidth(80),
                  fontWeight: 500,
                  textAlign: "center",
                  color: "black",
                  fontFamily:"myfont",
                  letterSpacing:.5,
                  fontWeight:500
                }}
              >
                Messages are generated by generative AI. Some may be inaccurate
                or inappropriate.
              </Text>
            </View>
          )}

          {messages.map((data, index) => {
            if (data.show == "right") {
              return (
                <>
                  <View key={data.message} style={styles.chatRight}>
                    <Text
                      style={{
                        color: "white",
                        fontSize: responsiveScreenWidth(3.8),
                        // fontWeight: "bold",
                        fontFamily:"myfont",
                        letterSpacing:.5
                      }}
                    >
                      {data.msg}{" "}
                    </Text>

                    <Text
                      style={{
                        fontSize: responsiveScreenFontSize(1.2),
                        textAlign: "right",
                        color: "white",
                      }}
                    >
                      {new Date().toLocaleTimeString("en-US", {
                        hour12: true,
                        hour: "2-digit",
                        minute: "2-digit",
                      })}
                    </Text>
                  </View>
                </>
              );
            } else if (data.show == "left") {
              return (
                <>
                  <View style={styles.chatLeft} key={data.message}>
                    <Text
                      style={{
                        color: "black",
                        fontSize: responsiveScreenWidth(3.75),
                        // fontWeight: "bold",
                        fontFamily:"myfont",
                        letterSpacing:.6
                      }}
                    >
                      {data.msg}
                    </Text>

                    <Text
                      style={{
                        fontSize: responsiveScreenFontSize(1.3),
                        textAlign: "right",
                      }}
                    >
                      {new Date().toLocaleTimeString("en-US", {
                        hour12: true,
                        hour: "2-digit",
                        minute: "2-digit",
                      })}
                    </Text>
                  </View>
                </>
              );
            }
          })}
        </ScrollView>

        <View style={[styles.inputView]}>
          <TouchableOpacity>
            <IconButton
              icon="microphone"
              size={25}
              style={{
                marginHorizontal: 0,
              }}
            />
          </TouchableOpacity>

          <TextInput
            cursorColor={"#648DDB"}
            placeholder="What's on your mind?"
            value={msgValue}
            onFocus={() => setInpFocus(false)}
            onChangeText={(text) => setMsgValue(text)}
            style={{
              fontSize: responsiveScreenFontSize(2),
              // width:responsiveScreenWidth(70)

              maxWidth: responsiveScreenWidth(70),
              width: responsiveScreenWidth(70),
              paddingHorizontal: 10,
              borderRadius: 20,
              fontFamily:"myfont",
              letterSpacing:.5,
              // fontWeight:"bold"
            }}
          />

          <TouchableOpacity onPress={sendHandler}>
            <IconButton
              icon="send"
              size={23}
              style={{
                color: "white",
              }}
            />
          </TouchableOpacity>
        </View>
      </SafeAreaView>
    </>
  );
}

const styles = StyleSheet.create({
  mainContainer: {
    height: "100%",
    backgroundColor: "white",
  },
  inputView: {
    backgroundColor: "white",
    elevation: 4,
    width: responsiveScreenWidth(100),
    position: "absolute",
    bottom: 1,
    flex: 1,
    flexDirection: "row",
    justifyContent: "space-evenly",
    borderTopWidth: 1,
    borderColor: "#EEEEEE",
  },
  header: {
    height: responsiveScreenHeight(6),
    backgroundColor: "white",
    elevation: 4,
    flexDirection: "row",
  },
  chatLeft: {
    backgroundColor: "#EEEEEE",
    padding: 10,
    width: "auto",
    marginHorizontal: 10,
    marginVertical: 5,
    borderBottomLeftRadius: 10,
    borderTopRightRadius: 10,
    borderBottomRightRadius: 10,
    elevation: 2,
    alignSelf: "flex-start",
    maxWidth: responsiveScreenWidth(90),
  },
  chatRight: {
    backgroundColor: "#648DDB",
    padding: 10,
    width: "auto",
    marginHorizontal: 10,
    marginVertical: 5,
    borderTopLeftRadius: 10,
    borderTopRightRadius: 10,
    borderBottomLeftRadius: 10,
    elevation: 4,
    alignSelf: "flex-end",
    maxWidth: responsiveScreenWidth(90),
  },
  premium: {
    justifyContent: "center",
    alignItems: "center",
    marginTop: responsiveScreenHeight(1),
  },
  premiumText: {
   
    fontFamily: "myfont",
    letterSpacing: 0.5,
    fontWeight: "bold",
  },
});
